version: "3.9"
services:
  gateway:
    image: nginx:stable
    volumes:
      - ./ops/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - auth-svc
      - incident-svc
      - realtime-svc
      - warlog-svc
      - ui
  auth-svc:
    build: ./services/auth-svc
    env_file:
      - ./ops/env/auth.env
    depends_on:
      - postgres
  incident-svc:
    build: ./services/incident-svc
    env_file:
      - ./ops/env/incident.env
    depends_on:
      - postgres
      - opensearch
      - minio
  warlog-svc:
    build: ./services/warlog-svc
    env_file:
      - ./ops/env/warlog.env
    depends_on:
      - postgres
  tak-ingest-svc:
    build: ./services/tak-ingest-svc
    env_file:
      - ./ops/env/tak.env
    depends_on:
      - postgres
      - redis
  realtime-svc:
    build: ./services/realtime-svc
    env_file:
      - ./ops/env/realtime.env
    depends_on:
      - redis
  ui:
    build: ./ui
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: tactix
      POSTGRES_PASSWORD: tactix
      POSTGRES_DB: tactix
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./ops/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
  opensearch:
    image: opensearchproject/opensearch:2
    environment:
      discovery.type: single-node
      plugins.security.disabled: "true"
    volumes:
      - osdata:/usr/share/opensearch/data
  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: tactix
      MINIO_ROOT_PASSWORD: tactix-secret
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - miniodata:/data
volumes:
  pgdata: {}
  redisdata: {}
  osdata: {}
  miniodata: {}
